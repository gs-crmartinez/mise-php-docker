#!/usr/bin/env bash
set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PLUGIN_DIR="$(cd "$SCRIPT_DIR/.." && pwd)"

if ! command -v docker &> /dev/null; then
  echo "Docker is required to run php via mise-php-docker." >&2
  exit 1
fi

PHP_VERSION=""
if command -v mise &> /dev/null; then
  PHP_VERSION=$(mise current php 2>/dev/null | awk 'NR==1 {print $2}')
fi

if [ -z "$PHP_VERSION" ] && [ -f "$PLUGIN_DIR/.mise-version" ]; then
  PHP_VERSION="$(<"$PLUGIN_DIR/.mise-version")"
fi

DEFAULT_IMAGE="mise-php-docker:${PHP_VERSION:-8}"
IMAGE="${PHP_DOCKER_IMAGE:-$DEFAULT_IMAGE}"

AUTO_BUILD_IMAGE="false"
if [[ "$IMAGE" == "$DEFAULT_IMAGE" && "$IMAGE" == mise-php-docker:* ]]; then
  AUTO_BUILD_IMAGE="true"
fi

if ! docker image inspect "$IMAGE" &> /dev/null; then
  if [[ "$AUTO_BUILD_IMAGE" == "true" ]]; then
    BUILD_VERSION="${PHP_VERSION:-8}"
    echo "Building Docker image $IMAGE..." >&2
    docker build -t "$IMAGE" --build-arg "PHP_VERSION=${BUILD_VERSION}" "$PLUGIN_DIR" || {
      echo "Failed to build Docker image $IMAGE" >&2
      exit 1
    }
  else
    echo "Docker image $IMAGE not found locally. Attempting to pull..." >&2
    docker pull "$IMAGE" || {
      echo "Failed to pull Docker image $IMAGE" >&2
      exit 1
    }
  fi
fi

DOCKER_ARGS=(
  "--rm"
  "-v" "$(pwd):/app"
  "-w" "/app"
)

if [ -t 0 ]; then
  DOCKER_ARGS+=("-it")
else
  DOCKER_ARGS+=("-i")
fi

docker run "${DOCKER_ARGS[@]}" "$IMAGE" php "$@"
